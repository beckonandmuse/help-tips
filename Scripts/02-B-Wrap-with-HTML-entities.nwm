# The following is adapted from
# a macro was originally written by Kino and modified 
# to search for specific Character Styles by Joshua Eldridge,
# Beckon&Muse.com, dev@beckonandmuse.com

$noStyleName = Cast to String '<no style>'  # customizable
$emptyDocument = 'Empty document, exiting...'  # customizable (error message)
$nothingChecked = 'No styles checkmarked, exiting...'  # customizable (error message)
$sp = Cast to String "\x20"  # customizable but...

$styleCategories = Array.new 'Character', 'Paragraph', 'List'  # customizable

$styleSymbols = $properties = $selectionsByStyle = Hash.new
$styleSymbols{$styleCategories[0]} = Cast to String '[a̱]'  # customizable (for Character Style)
$styleSymbols{$styleCategories[1]} = Cast to String '[¶]'  # customizable (for Paragraph Style)
$styleSymbols{$styleCategories[2]} = Cast to String '[#]'  # customizable (for List Style)

$properties{$styleCategories[0]} = 'characterStyle'
$properties{$styleCategories[1]} = 'paragraphStyle'
$properties{$styleCategories[2]} = 'listStyle'

Require Pro Version 1.3
$doc = Document.active
if $doc == undefined
	exit  # no open document
end

foreach $text in $doc.allTexts
	if $text.length
		$textRanges = Array.new # Will become all Doc. Ranges (i.e., Tables & Text. See 49 & 56)
		if $text.tables.count  # then, exclude special chars enclosing tables
			$tableRanges = Array.new
			foreach $table in $text.tables
				$tableRanges.appendValue $table.enclosingTextRange
			end
			$tableRanges.sort
			$i = 0
			foreach $tableRange in $tableRanges
				$range = Range.newWithLocationAndBound $i, $tableRange.location
				$textRanges.appendValue $range
				$i = $tableRange.bound
			end
			$range = Range.newWithLocationAndBound $i, $text.length
		else
			$range = Range.new 0, $text.length
		end
		$textRanges.appendValue $range
		foreach $textRange in $textRanges
			$i = $textRange.location
			$textRangeBound = $textRange.bound
			while $i < $textRangeBound 
				$attr = $text.displayAttributesAtIndex $i 
				$range = $text.rangeOfDisplayAttributesAtIndex $i
				$sel = TextSelection.new $text, $range
				foreach $property in $properties.keys
					$styleObject = $attr.getProperty $properties{$property}
					#############################
					# FOR CHOOSING SPECIFIC STYLE
					#############################
					$bound = $range.bound
					if $styleObject
						if $styleObject.name == "doc-desc-title"
							$doc.setSelection $sel
							Format:Character Style:Remove Character Styles
							$location = $range.location
							$spanStart = "<span class='doc-desc-title'>"
							$spanEnd = "</span>"
							$text.insertAtIndex $bound, $spanEnd
							$text.insertAtIndex $location, $spanStart
							$spanStartCount = $spanStart.length
							$spanEndCount = $spanEnd.length
							$spanCount = $spanStartCount + $spanEndCount
							$textRangeBound += $spanCount
							$bound += $spanCount
						elsif $styleObject.name == "doc-desc-opt"
							$doc.setSelection $sel
							Format:Character Style:Remove Character Styles
							$location = $range.location
							$spanStart = "<span class='doc-desc-opt'>"
							$spanEnd = "</span>"
							$text.insertAtIndex $bound, $spanEnd
							$text.insertAtIndex $location, $spanStart
							$spanStartCount = $spanStart.length
							$spanEndCount = $spanEnd.length
							$spanCount = $spanStartCount + $spanEndCount
							$textRangeBound += $spanCount
							$bound += $spanCount
						end
					end
					#############################
					$name = $styleSymbols{$property}
					if Defined $styleObject
						$name &= $sp & $styleObject.name
					else
						$name &= $sp & $noStyleName
					end
					if $selectionsByStyle{$name} == undefined
						$selectionsByStyle{$name} = Array.new
					end
					$selectionsByStyle{$name}.appendValue $sel												
				end
				$i = $bound
			end
		end
	end
end

if ! $selectionsByStyle.count # No defined styles in document.
	exit $emptyDocument
end